library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Grafo di Overlap", "Grafo di de Bruijn", "Grafo del Caos"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = "dodge", stat = "identity") +
theme_linedraw(base_size = 18)+
labs(title = "Comparison of Performance Metrics",
x = "Graph",
y = "Value",
fill = "Metrics") +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1-Score" = "#89c9f8", "Accuracy" = "#B8DEFA"),
labels = c("Precision", "Recall", "F1 Score", "Accuracy")
) +
theme(plot.title = element_text(hjust = 0.5)) # Centra il titolo
# Caricamento del pacchetto ggplot2
library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = "dodge", stat = "identity") +
theme_linedraw(base_size = 18)+
labs(title = "Comparison of Performance Metrics",
x = "Graph",
y = "Value",
fill = "Metrics") +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1-Score" = "#89c9f8", "Accuracy" = "#B8DEFA"),
labels = c("Precision", "Recall", "F1 Score", "Accuracy")
) +
theme(plot.title = element_text(hjust = 0.5)) # Centra il titolo
# Carica la libreria ggplot2
library(ggplot2)
library(tidyr)
# Dati forniti
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.858, 0.742, 0.875, 0.748, 0.693, 0.889),
Recall = c(0.843, 0.764, 0.846, 0.806, 0.744, 0.779),
F1Score = c(0.850, 0.753, 0.860, 0.776, 0.717, 0.830)
)
# Trasforma i dati in formato lungo per ggplot2
dati_lunghi <- pivot_longer(dati, cols = -Ordine, names_to = "Metrica", values_to = "Valore")
# Crea il grafico a barre raggruppate
ggplot(dati_lunghi, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
theme_minimal() +
labs(x = "Ordine", y = "Valore", title = "Metriche di Performance per Ordine di Virus") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Pastel1", name = "Metrica") # Usa una palette di colori per differenziare le metriche
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.858, 0.742, 0.875, 0.748, 0.693, 0.889),
Recall = c(0.843, 0.764, 0.846, 0.806, 0.744, 0.779),
F1Score = c(0.850, 0.753, 0.860, 0.776, 0.717, 0.830)
)
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.742, 0.689, 0.731, 0.770, 0.646, 0.827),
Recall = c(0.863, 0.633, 0.868, 0.618, 0.587, 0.737),
F1Score = c(0.798, 0.660, 0.794, 0.686, 0.615, 0.780)
)
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.858, 0.742, 0.875, 0.748, 0.693, 0.889),
Recall = c(0.843, 0.764, 0.846, 0.806, 0.744, 0.779),
F1Score = c(0.850, 0.753, 0.860, 0.776, 0.717, 0.830)
)
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.670, 0.887, 0.614, 0.841, 0.592, 0.825),
Recall = c(0.911, 0.453, 0.925, 0.717, 0.580, 0.629),
F1Score = c(0.772, 0.600, 0.738, 0.774, 0.585, 0.714)
)
# Trasforma il dataframe in formato lungo
dati_long <-
pivot_longer(dati,
cols = -Ordine,
names_to = "Metrica",
values_to = "Valore")
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
source("~/Senza nome.R")
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.858, 0.742, 0.875, 0.748, 0.693, 0.889),
Recall = c(0.843, 0.764, 0.846, 0.806, 0.744, 0.779),
F1Score = c(0.850, 0.753, 0.860, 0.776, 0.717, 0.830)
)
# Trasforma il dataframe in formato lungo
dati_long <-
pivot_longer(dati,
cols = -Ordine,
names_to = "Metrica",
values_to = "Valore")
# Crea un grafico a barre raggruppate
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.670, 0.887, 0.614, 0.841, 0.592, 0.825),
Recall = c(0.911, 0.453, 0.925, 0.717, 0.580, 0.629),
F1Score = c(0.772, 0.600, 0.738, 0.774, 0.585, 0.714)
)
# Trasforma il dataframe in formato lungo
dati_long <-
pivot_longer(dati,
cols = -Ordine,
names_to = "Metrica",
values_to = "Valore")
# Crea un grafico a barre raggruppate
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18) +
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision" = "Precision", "Recall" = "Recall", "F1Score" = "F1 Score")  # Aggiunta di etichette corrispondenti
) +
labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value", fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.title.x = element_text(margin = margin(t = 30)),
axis.title.y = element_text(margin = margin(r = 30)),
plot.title = element_text(face = 'bold', hjust = 0.5, margin = margin(b = 25, t = 15))
)
# Crea un dataframe con i tuoi dati
dati <- data.frame(
Ordine = c(
"Bunyavirales",
"Mononegavirales",
"Nidovirales",
"Ortervirales",
"Picornavirales",
"Tymovirales"
),
Precision = c(0.742, 0.689, 0.731, 0.770, 0.646, 0.827),
Recall = c(0.863, 0.633, 0.868, 0.618, 0.587, 0.737),
F1Score = c(0.798, 0.660, 0.794, 0.686, 0.615, 0.780)
)
# Trasforma il dataframe in formato lungo
dati_long <-
pivot_longer(dati,
cols = -Ordine,
names_to = "Metrica",
values_to = "Valore")
#caos
# Crea un grafico a barre raggruppate
ggplot(dati_long, aes(x = Ordine, y = Valore, fill = Metrica)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
theme_linedraw(base_size = 18)+
scale_fill_manual(
values = c("Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1Score" = "#89c9f8"),
labels = c("Precision", "Recall", "F1 Score")  # Modifica qui per aggiungere lo spazio in "F1 Score"
)+labs(title = "Evaluation Metrics for Viral Order", x = "Viral Order", y = "Value",fill= "Metrics") +
theme(
legend.position = "right",
legend.key.size = unit(0.5, "cm"),
# Imposta la posizione della legenda e le dimensioni della chiave
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
# Imposta l'angolo e l'allineamento del testo sull'asse x
axis.title.x = element_text(margin = margin(t = 30)),
# Imposta il margine per l'etichetta dell'asse x
axis.title.y = element_text(margin = margin(r = 30)),
# Imposta il margine per l'etichetta dell'asse y
plot.title = element_text(
face = 'bold',
hjust = 0.5,
margin = margin(b = 25, t = 15)
) )
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = "dodge", stat = "identity") +
theme_linedraw(base_size = 18) +
labs(title = "Comparison of Performance Metrics",
x = "Graph",
y = "Value",
fill = "Metrics") +
scale_fill_manual(
values = c("Accuracy" = "#B8DEFA", "Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1-Score" = "#89c9f8"),
labels = c("Accuracy", "Precision", "Recall", "F1 Score") # Assicurati che le etichette corrispondano
) +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1) # Migliora la leggibilità delle etichette sull'asse X
)
# Assicurati di avere i pacchetti necessari installati e caricati
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre raggruppate
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = position_dodge(), stat = "identity") +
scale_fill_brewer(palette = "Paired") +
labs(title = "Comparison of Performance Metrics by Graph Type",
x = "Graph Type",
y = "Metric Value",
fill = "Metric Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Ruota le etichette sull'asse X per migliorare la leggibilità
library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768,  0.827,  0.737, 0.767, # Valori per Grafo di Overlap
0.720, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = "dodge", stat = "identity") +
theme_linedraw(base_size = 18) +
labs(title = "Comparison of Performance Metrics",
x = "Graph Type",
y = "Metric Value",
fill = "Metric") +
scale_fill_manual(
values = c("Accuracy" = "#B8DEFA", "Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1-Score" = "#89c9f8"),
labels = c("Accuracy", "Precision", "Recall", "F1 Score")
) +
theme(
plot.title = element_text(hjust = 0.5),
legend.title.align = 0.5,
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom"
)
library(ggplot2)
# Dati di esempio aggiornati con i valori corretti
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768,  0.827,  0.737, 0.767, # Valori per Grafo di Overlap
0.72, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = "dodge", stat = "identity") +
theme_minimal(base_size = 18) + # Uso theme_minimal per un aspetto più pulito
labs(title = "Comparison of Performance Metrics",
x = "Graph Type", # Modificato per chiarezza
y = "Value",
fill = "Metrics") +
scale_fill_manual(
values = c("Accuracy" = "#B8DEFA", "Precision" = "#436fcd", "Recall" = "#8ab0e8", "F1-Score" = "#89c9f8"),
labels = c("Accuracy", "Precision", "Recall", "F1 Score") # Assicura che le etichette corrispondano
) +
theme(plot.title = element_text(hjust = 0.5, size = 20), # Aumenta la dimensione del titolo
legend.title = element_text(size = 16), # Ajusta la dimensione del titolo della legenda
legend.text = element_text(size = 14), # Ajusta la dimensione del testo della legenda
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) # Migliora la leggibilità delle etichette dell'asse X
# Assicurati di avere i pacchetti necessari installati e caricati
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre raggruppate
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = position_dodge(), stat = "identity") +
scale_fill_brewer(palette = "Paired") +
labs(title = "Comparison of Performance Metrics by Graph Type",
x = "Graph Type",
y = "Metric Value",
fill = "Metric Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Ruota le etichette sull'asse X per migliorare la leggibilità
# Assicurati di avere i pacchetti necessari installati e caricati
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre raggruppate
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = position_dodge(), stat = "identity") +
scale_fill_brewer(palette = "Paired") +
labs(title = "Comparison of Performance Metrics by Graph Type",
x = "Graph Type",
y = "Metric Value",
fill = "Metric Type") +
theme_linedraw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Ruota le etichette sull'asse X per migliorare la leggibilità
# Dati di esempio
dati <- data.frame(
Grafo = rep(c("Overlap Graph", "De Bruijn Graph", "Chaos Graph"), each = 4),
Metrica = rep(c("Accuracy", "Precision", "Recall", "F1-Score"), times = 3),
Valore = c(0.768, 0.781, 0.768, 0.767, # Valori per Grafo di Overlap
0.724, 0.733, 0.738,  0.725, # Valori per Grafo di de Bruijn
0.730, 0.734, 0.718, 0.722) # Valori per Grafo del Caos
)
# Creazione del grafico a barre raggruppate
ggplot(dati, aes(fill = Metrica, y = Valore, x = Grafo)) +
geom_bar(position = position_dodge(), stat = "identity") +
scale_fill_brewer(palette = "Paired") +
labs(title = "Comparison of Performance Metrics by Graph Type",
x = "Graph Type",
y = "Metric Value",
fill = "Metric Type") +
theme_linedraw(base_size = 18)+
theme(plot.title = element_text(hjust = 0.5),axis.text.x = element_text(angle = 45, hjust = 1)) # Ruota le etichette sull'asse X per migliorare la leggibilità
ls
cw
cwd
getwd()
setwd(/Users/alessiature/Scrivania/ProgettoBD2)
setwd("/Users/alessiature/Scrivania/ProgettoBD2")
setwd("Users/alessiature/Scrivania/ProgettoBD2")
setwd("/Users/alessiature/Scrivania/ProgettoBD2")
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
setwd('/Users/alessiature/ProgettoBD2')
setwd('/Users/alessiature/Desktop/ProgettoBD2')
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
source("~/Desktop/ProgettoBD2/analisi_dataset.R")
